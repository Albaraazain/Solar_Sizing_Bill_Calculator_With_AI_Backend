{
    "sourceFile": "solar/utils/auth.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1733403289824,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1733406971222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,14 @@\n # solar/utils/auth.py\r\n+from datetime import datetime, timedelta\r\n+from functools import wraps\r\n+\r\n+from django.http import JsonResponse\r\n+import jwt\r\n+\r\n+from EnergyCove import settings\r\n+\r\n+\r\n def generate_token(user_id, expiry_hours=24):\r\n     \"\"\"Generate a new JWT token\"\"\"\r\n     payload = {\r\n         'user_id': user_id,\r\n"
                }
            ],
            "date": 1733403289824,
            "name": "Commit-0",
            "content": "# solar/utils/auth.py\r\ndef generate_token(user_id, expiry_hours=24):\r\n    \"\"\"Generate a new JWT token\"\"\"\r\n    payload = {\r\n        'user_id': user_id,\r\n        'exp': datetime.now() + timedelta(hours=expiry_hours),\r\n        'iat': datetime.now()\r\n    }\r\n    return jwt.encode(payload, settings.SECRET_KEY, algorithm='HS256')\r\n\r\ndef auth_required(view_func):\r\n    \"\"\"Decorator for views that require authentication\"\"\"\r\n    @wraps(view_func)\r\n    def wrapped_view(request, *args, **kwargs):\r\n        if not hasattr(request, 'user_id'):\r\n            return JsonResponse({\r\n                'success': False,\r\n                'message': 'Authentication required'\r\n            }, status=401)\r\n        return view_func(request, *args, **kwargs)\r\n    return wrapped_view\r\n"
        }
    ]
}