{
    "sourceFile": "solar/serializers/admin_serializers.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1733408374307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1733408465572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,62 @@\n+from rest_framework import serializers\r\n+from ..models import Panel, Inverter, PotentialCustomers\r\n+\r\n+class PanelSerializer(serializers.ModelSerializer):\r\n+    class Meta:\r\n+        model = Panel\r\n+        fields = ['id', 'brand', 'power', 'price', 'default_choice', 'availability']\r\n+        read_only_fields = ['id']\r\n+\r\n+    def validate_power(self, value):\r\n+        if value <= 0:\r\n+            raise serializers.ValidationError(\"Power must be greater than 0\")\r\n+        return value\r\n+\r\n+    def validate_price(self, value):\r\n+        if value <= 0:\r\n+            raise serializers.ValidationError(\"Price must be greater than 0\")\r\n+        return value\r\n+\r\n+class InverterSerializer(serializers.ModelSerializer):\r\n+    class Meta:\r\n+        model = Inverter\r\n+        fields = ['id', 'brand', 'power', 'price', 'availability']\r\n+        read_only_fields = ['id']\r\n+\r\n+    def validate_power(self, value):\r\n+        if value <= 0:\r\n+            raise serializers.ValidationError(\"Power must be greater than 0\")\r\n+        return value\r\n+\r\n+    def validate_price(self, value):\r\n+        if value <= 0:\r\n+            raise serializers.ValidationError(\"Price must be greater than 0\")\r\n+        return value\r\n+\r\n+class CustomerSerializer(serializers.ModelSerializer):\r\n+    class Meta:\r\n+        model = PotentialCustomers\r\n+        fields = ['id', 'name', 'phone', 'address', 'reference_number', 'created_at']\r\n+        read_only_fields = ['id', 'created_at']\r\n+\r\n+class PriceConfigurationSerializer(serializers.Serializer):\r\n+    frame_cost_per_watt = serializers.DecimalField(\r\n+        max_digits=10,\r\n+        decimal_places=2,\r\n+        min_value=0\r\n+    )\r\n+    installation_cost_per_watt = serializers.DecimalField(\r\n+        max_digits=10,\r\n+        decimal_places=2,\r\n+        min_value=0\r\n+    )\r\n+    net_metering = serializers.DecimalField(\r\n+        max_digits=10,\r\n+        decimal_places=2,\r\n+        min_value=0\r\n+    )\r\n+    labor_cost = serializers.DecimalField(\r\n+        max_digits=10,\r\n+        decimal_places=2,\r\n+        min_value=0\r\n+    )\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733432460866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+# path: solar/serializers/admin_serializers.py\r\n from rest_framework import serializers\r\n from ..models import Panel, Inverter, PotentialCustomers\r\n \r\n class PanelSerializer(serializers.ModelSerializer):\r\n@@ -58,67 +59,5 @@\n     labor_cost = serializers.DecimalField(\r\n         max_digits=10,\r\n         decimal_places=2,\r\n         min_value=0\r\n-    )\n-from rest_framework import serializers\r\n-from ..models import Panel, Inverter, PotentialCustomers\r\n-\r\n-class PanelSerializer(serializers.ModelSerializer):\r\n-    class Meta:\r\n-        model = Panel\r\n-        fields = ['id', 'brand', 'power', 'price', 'default_choice', 'availability']\r\n-        read_only_fields = ['id']\r\n-\r\n-    def validate_power(self, value):\r\n-        if value <= 0:\r\n-            raise serializers.ValidationError(\"Power must be greater than 0\")\r\n-        return value\r\n-\r\n-    def validate_price(self, value):\r\n-        if value <= 0:\r\n-            raise serializers.ValidationError(\"Price must be greater than 0\")\r\n-        return value\r\n-\r\n-class InverterSerializer(serializers.ModelSerializer):\r\n-    class Meta:\r\n-        model = Inverter\r\n-        fields = ['id', 'brand', 'power', 'price', 'availability']\r\n-        read_only_fields = ['id']\r\n-\r\n-    def validate_power(self, value):\r\n-        if value <= 0:\r\n-            raise serializers.ValidationError(\"Power must be greater than 0\")\r\n-        return value\r\n-\r\n-    def validate_price(self, value):\r\n-        if value <= 0:\r\n-            raise serializers.ValidationError(\"Price must be greater than 0\")\r\n-        return value\r\n-\r\n-class CustomerSerializer(serializers.ModelSerializer):\r\n-    class Meta:\r\n-        model = PotentialCustomers\r\n-        fields = ['id', 'name', 'phone', 'address', 'reference_number', 'created_at']\r\n-        read_only_fields = ['id', 'created_at']\r\n-\r\n-class PriceConfigurationSerializer(serializers.Serializer):\r\n-    frame_cost_per_watt = serializers.DecimalField(\r\n-        max_digits=10,\r\n-        decimal_places=2,\r\n-        min_value=0\r\n-    )\r\n-    installation_cost_per_watt = serializers.DecimalField(\r\n-        max_digits=10,\r\n-        decimal_places=2,\r\n-        min_value=0\r\n-    )\r\n-    net_metering = serializers.DecimalField(\r\n-        max_digits=10,\r\n-        decimal_places=2,\r\n-        min_value=0\r\n-    )\r\n-    labor_cost = serializers.DecimalField(\r\n-        max_digits=10,\r\n-        decimal_places=2,\r\n-        min_value=0\r\n     )\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733448335500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,13 @@\n # path: solar/serializers/admin_serializers.py\r\n from rest_framework import serializers\r\n-from ..models import Panel, Inverter, PotentialCustomers\r\n+from decimal import Decimal\r\n+from ..models import Panel, Inverter, BracketCosts, VariableCosts, PotentialCustomers\r\n \r\n class PanelSerializer(serializers.ModelSerializer):\r\n+    power = serializers.DecimalField(max_digits=10, decimal_places=2, min_value=Decimal('0.00'))\r\n+    price = serializers.DecimalField(max_digits=10, decimal_places=2, min_value=Decimal('0.00'))\r\n+\r\n     class Meta:\r\n         model = Panel\r\n         fields = ['id', 'brand', 'power', 'price', 'default_choice', 'availability']\r\n         read_only_fields = ['id']\r\n"
                }
            ],
            "date": 1733408374307,
            "name": "Commit-0",
            "content": "from rest_framework import serializers\r\nfrom ..models import Panel, Inverter, PotentialCustomers\r\n\r\nclass PanelSerializer(serializers.ModelSerializer):\r\n    class Meta:\r\n        model = Panel\r\n        fields = ['id', 'brand', 'power', 'price', 'default_choice', 'availability']\r\n        read_only_fields = ['id']\r\n\r\n    def validate_power(self, value):\r\n        if value <= 0:\r\n            raise serializers.ValidationError(\"Power must be greater than 0\")\r\n        return value\r\n\r\n    def validate_price(self, value):\r\n        if value <= 0:\r\n            raise serializers.ValidationError(\"Price must be greater than 0\")\r\n        return value\r\n\r\nclass InverterSerializer(serializers.ModelSerializer):\r\n    class Meta:\r\n        model = Inverter\r\n        fields = ['id', 'brand', 'power', 'price', 'availability']\r\n        read_only_fields = ['id']\r\n\r\n    def validate_power(self, value):\r\n        if value <= 0:\r\n            raise serializers.ValidationError(\"Power must be greater than 0\")\r\n        return value\r\n\r\n    def validate_price(self, value):\r\n        if value <= 0:\r\n            raise serializers.ValidationError(\"Price must be greater than 0\")\r\n        return value\r\n\r\nclass CustomerSerializer(serializers.ModelSerializer):\r\n    class Meta:\r\n        model = PotentialCustomers\r\n        fields = ['id', 'name', 'phone', 'address', 'reference_number', 'created_at']\r\n        read_only_fields = ['id', 'created_at']\r\n\r\nclass PriceConfigurationSerializer(serializers.Serializer):\r\n    frame_cost_per_watt = serializers.DecimalField(\r\n        max_digits=10,\r\n        decimal_places=2,\r\n        min_value=0\r\n    )\r\n    installation_cost_per_watt = serializers.DecimalField(\r\n        max_digits=10,\r\n        decimal_places=2,\r\n        min_value=0\r\n    )\r\n    net_metering = serializers.DecimalField(\r\n        max_digits=10,\r\n        decimal_places=2,\r\n        min_value=0\r\n    )\r\n    labor_cost = serializers.DecimalField(\r\n        max_digits=10,\r\n        decimal_places=2,\r\n        min_value=0\r\n    )"
        }
    ]
}