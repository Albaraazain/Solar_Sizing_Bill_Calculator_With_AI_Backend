{
    "sourceFile": "frontend/node_modules/vite/types/customEvent.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1733415129517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1733415129517,
            "name": "Commit-0",
            "content": "import type {\n  ErrorPayload,\n  FullReloadPayload,\n  PrunePayload,\n  UpdatePayload,\n} from 'vite/types/hmrPayload.js'\n\nexport interface CustomEventMap {\n  'vite:beforeUpdate': UpdatePayload\n  'vite:afterUpdate': UpdatePayload\n  'vite:beforePrune': PrunePayload\n  'vite:beforeFullReload': FullReloadPayload\n  'vite:error': ErrorPayload\n  'vite:invalidate': InvalidatePayload\n  'vite:ws:connect': WebSocketConnectionPayload\n  'vite:ws:disconnect': WebSocketConnectionPayload\n}\n\nexport interface WebSocketConnectionPayload {\n  /**\n   * @experimental\n   * We expose this instance experimentally to see potential usage.\n   * This might be removed in the future if we didn't find reasonable use cases.\n   * If you find this useful, please open an issue with details so we can discuss and make it stable API.\n   */\n  // eslint-disable-next-line n/no-unsupported-features/node-builtins\n  webSocket: WebSocket\n}\n\nexport interface InvalidatePayload {\n  path: string\n  message: string | undefined\n}\n\n/**\n * provides types for built-in Vite events\n */\nexport type InferCustomEventPayload<T extends string> =\n  T extends keyof CustomEventMap ? CustomEventMap[T] : any\n"
        }
    ]
}