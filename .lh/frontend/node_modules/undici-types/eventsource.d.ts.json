{
    "sourceFile": "frontend/node_modules/undici-types/eventsource.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1733415129517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1733415129517,
            "name": "Commit-0",
            "content": "import { MessageEvent, ErrorEvent } from 'undici-types/websocket'\nimport Dispatcher from 'undici-types/dispatcher'\n\nimport {\n  EventTarget,\n  Event,\n  EventListenerOptions,\n  AddEventListenerOptions,\n  EventListenerOrEventListenerObject\n} from 'undici-types/patch'\n\ninterface EventSourceEventMap {\n  error: ErrorEvent\n  message: MessageEvent\n  open: Event\n}\n\ninterface EventSource extends EventTarget {\n  close(): void\n  readonly CLOSED: 2\n  readonly CONNECTING: 0\n  readonly OPEN: 1\n  onerror: (this: EventSource, ev: ErrorEvent) => any\n  onmessage: (this: EventSource, ev: MessageEvent) => any\n  onopen: (this: EventSource, ev: Event) => any\n  readonly readyState: 0 | 1 | 2\n  readonly url: string\n  readonly withCredentials: boolean\n\n  addEventListener<K extends keyof EventSourceEventMap>(\n    type: K,\n    listener: (this: EventSource, ev: EventSourceEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions\n  ): void\n  addEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions\n  ): void\n  removeEventListener<K extends keyof EventSourceEventMap>(\n    type: K,\n    listener: (this: EventSource, ev: EventSourceEventMap[K]) => any,\n    options?: boolean | EventListenerOptions\n  ): void\n  removeEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | EventListenerOptions\n  ): void\n}\n\nexport declare const EventSource: {\n  prototype: EventSource\n  new (url: string | URL, init?: EventSourceInit): EventSource\n  readonly CLOSED: 2\n  readonly CONNECTING: 0\n  readonly OPEN: 1\n}\n\ninterface EventSourceInit {\n  withCredentials?: boolean,\n  dispatcher?: Dispatcher\n}\n"
        }
    ]
}