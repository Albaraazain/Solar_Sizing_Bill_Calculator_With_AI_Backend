{
    "sourceFile": "frontend/node_modules/undici-types/mock-client.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1733415129514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1733415129514,
            "name": "Commit-0",
            "content": "import Client from 'undici-types/client'\nimport Dispatcher from 'undici-types/dispatcher'\nimport MockAgent from 'undici-types/mock-agent'\nimport { MockInterceptor, Interceptable } from 'undici-types/mock-interceptor'\n\nexport default MockClient\n\n/** MockClient extends the Client API and allows one to mock requests. */\ndeclare class MockClient extends Client implements Interceptable {\n  constructor(origin: string, options: MockClient.Options);\n  /** Intercepts any matching requests that use the same origin as this mock client. */\n  intercept(options: MockInterceptor.Options): MockInterceptor;\n  /** Dispatches a mocked request. */\n  dispatch(options: Dispatcher.DispatchOptions, handlers: Dispatcher.DispatchHandlers): boolean;\n  /** Closes the mock client and gracefully waits for enqueued requests to complete. */\n  close(): Promise<void>;\n}\n\ndeclare namespace MockClient {\n  /** MockClient options. */\n  export interface Options extends Client.Options {\n    /** The agent to associate this MockClient with. */\n    agent: MockAgent;\n  }\n}\n"
        }
    ]
}