{
    "sourceFile": "frontend/src/api/services/quoteApi.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1733434436726,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1733434446110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,17 @@\n         }\r\n     }\r\n \r\n     async getQuoteById(quoteId) {\r\n-        return this.get(`/${quoteId}`);\r\n+        try {\r\n+            const url = `${API_CONFIG.ENDPOINTS.QUOTE.GET}${quoteId}/`;\r\n+            console.log('Fetching quote:', url);\r\n+            const response = await this.get(url);\r\n+            return response;\r\n+        } catch (error) {\r\n+            console.error('Error fetching quote:', error);\r\n+            throw error;\r\n+        }\r\n     }\r\n \r\n     async updateQuote(quoteId, updates) {\r\n         return this.put(`/${quoteId}`, updates);\r\n"
                },
                {
                    "date": 1733434458828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,13 +30,28 @@\n         }\r\n     }\r\n \r\n     async updateQuote(quoteId, updates) {\r\n-        return this.put(`/${quoteId}`, updates);\r\n+        try {\r\n+            const url = `${API_CONFIG.ENDPOINTS.QUOTE.BASE}${quoteId}/`;\r\n+            console.log('Updating quote:', { quoteId, updates });\r\n+            const response = await this.put(url, updates);\r\n+            return response;\r\n+        } catch (error) {\r\n+            console.error('Error updating quote:', error);\r\n+            throw error;\r\n+        }\r\n     }\r\n \r\n     async saveQuote(quote) {\r\n-        return this.post('', quote);\r\n+        try {\r\n+            console.log('Saving quote:', quote);\r\n+            const response = await this.post(API_CONFIG.ENDPOINTS.QUOTE.SAVE, quote);\r\n+            return response;\r\n+        } catch (error) {\r\n+            console.error('Error saving quote:', error);\r\n+            throw error;\r\n+        }\r\n     }\r\n }\r\n \r\n export const quoteApi = new QuoteApi();\r\n"
                },
                {
                    "date": 1733434476597,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n export class QuoteApi extends BaseApiService {\r\n     constructor() {\r\n         super(API_CONFIG.ENDPOINTS.QUOTE.BASE);\r\n     }\r\n-\r\n+    \r\n     async generateQuote(billData) {\r\n         try {\r\n             console.log('Generating quote for bill data:', billData);\r\n             const response = await this.post(API_CONFIG.ENDPOINTS.QUOTE.GENERATE, billData);\r\n"
                },
                {
                    "date": 1733434501752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,57 @@\n+// src/api/services/quoteApi.js\r\n+import { BaseApiService } from '../base/BaseApiService.js';\r\n+import { API_CONFIG } from '../client/apiConfig.js';\r\n+\r\n+export class QuoteApi extends BaseApiService {\r\n+    constructor() {\r\n+        super(API_CONFIG.ENDPOINTS.QUOTE.BASE);\r\n+    }\r\n+    \r\n+    async generateQuote(billData) {\r\n+        try {\r\n+            console.log('Generating quote for bill data:', billData);\r\n+            const response = await this.post(API_CONFIG.ENDPOINTS.QUOTE.GENERATE, billData);\r\n+            return response;\r\n+        } catch (error) {\r\n+            console.error('Error generating quote:', error);\r\n+            throw error;\r\n+        }\r\n+    }\r\n+\r\n+    async getQuoteById(quoteId) {\r\n+        try {\r\n+            const url = `${API_CONFIG.ENDPOINTS.QUOTE.GET}${quoteId}/`;\r\n+            console.log('Fetching quote:', url);\r\n+            const response = await this.get(url);\r\n+            return response;\r\n+        } catch (error) {\r\n+            console.error('Error fetching quote:', error);\r\n+            throw error;\r\n+        }\r\n+    }\r\n+\r\n+    async updateQuote(quoteId, updates) {\r\n+        try {\r\n+            const url = `${API_CONFIG.ENDPOINTS.QUOTE.BASE}${quoteId}/`;\r\n+            console.log('Updating quote:', { quoteId, updates });\r\n+            const response = await this.put(url, updates);\r\n+            return response;\r\n+        } catch (error) {\r\n+            console.error('Error updating quote:', error);\r\n+            throw error;\r\n+        }\r\n+    }\r\n+\r\n+    async saveQuote(quote) {\r\n+        try {\r\n+            console.log('Saving quote:', quote);\r\n+            const response = await this.post(API_CONFIG.ENDPOINTS.QUOTE.SAVE, quote);\r\n+            return response;\r\n+        } catch (error) {\r\n+            console.error('Error saving quote:', error);\r\n+            throw error;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+export const quoteApi = new QuoteApi();\r\n"
                },
                {
                    "date": 1733434522846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,61 +54,4 @@\n     }\r\n }\r\n \r\n export const quoteApi = new QuoteApi();\r\n-// src/api/services/quoteApi.js\r\n-import { BaseApiService } from '../base/BaseApiService.js';\r\n-import { API_CONFIG } from '../client/apiConfig.js';\r\n-\r\n-export class QuoteApi extends BaseApiService {\r\n-    constructor() {\r\n-        super(API_CONFIG.ENDPOINTS.QUOTE.BASE);\r\n-    }\r\n-    \r\n-    async generateQuote(billData) {\r\n-        try {\r\n-            console.log('Generating quote for bill data:', billData);\r\n-            const response = await this.post(API_CONFIG.ENDPOINTS.QUOTE.GENERATE, billData);\r\n-            return response;\r\n-        } catch (error) {\r\n-            console.error('Error generating quote:', error);\r\n-            throw error;\r\n-        }\r\n-    }\r\n-\r\n-    async getQuoteById(quoteId) {\r\n-        try {\r\n-            const url = `${API_CONFIG.ENDPOINTS.QUOTE.GET}${quoteId}/`;\r\n-            console.log('Fetching quote:', url);\r\n-            const response = await this.get(url);\r\n-            return response;\r\n-        } catch (error) {\r\n-            console.error('Error fetching quote:', error);\r\n-            throw error;\r\n-        }\r\n-    }\r\n-\r\n-    async updateQuote(quoteId, updates) {\r\n-        try {\r\n-            const url = `${API_CONFIG.ENDPOINTS.QUOTE.BASE}${quoteId}/`;\r\n-            console.log('Updating quote:', { quoteId, updates });\r\n-            const response = await this.put(url, updates);\r\n-            return response;\r\n-        } catch (error) {\r\n-            console.error('Error updating quote:', error);\r\n-            throw error;\r\n-        }\r\n-    }\r\n-\r\n-    async saveQuote(quote) {\r\n-        try {\r\n-            console.log('Saving quote:', quote);\r\n-            const response = await this.post(API_CONFIG.ENDPOINTS.QUOTE.SAVE, quote);\r\n-            return response;\r\n-        } catch (error) {\r\n-            console.error('Error saving quote:', error);\r\n-            throw error;\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-export const quoteApi = new QuoteApi();\r\n"
                }
            ],
            "date": 1733434436726,
            "name": "Commit-0",
            "content": "// src/api/services/quoteApi.js\r\nimport { BaseApiService } from '../base/BaseApiService.js';\r\nimport { API_CONFIG } from '../client/apiConfig.js';\r\n\r\nexport class QuoteApi extends BaseApiService {\r\n    constructor() {\r\n        super(API_CONFIG.ENDPOINTS.QUOTE.BASE);\r\n    }\r\n\r\n    async generateQuote(billData) {\r\n        try {\r\n            console.log('Generating quote for bill data:', billData);\r\n            const response = await this.post(API_CONFIG.ENDPOINTS.QUOTE.GENERATE, billData);\r\n            return response;\r\n        } catch (error) {\r\n            console.error('Error generating quote:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async getQuoteById(quoteId) {\r\n        return this.get(`/${quoteId}`);\r\n    }\r\n\r\n    async updateQuote(quoteId, updates) {\r\n        return this.put(`/${quoteId}`, updates);\r\n    }\r\n\r\n    async saveQuote(quote) {\r\n        return this.post('', quote);\r\n    }\r\n}\r\n\r\nexport const quoteApi = new QuoteApi();\r\n"
        }
    ]
}